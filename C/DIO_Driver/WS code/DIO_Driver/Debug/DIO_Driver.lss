
DIO_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000730  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000730  000007a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000ae0  00000000  00000000  000007a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000068f  00000000  00000000  00001288  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e3       	ldi	r30, 0x30	; 48
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 47 03 	call	0x68e	; 0x68e <main>
  7a:	0c 94 96 03 	jmp	0x72c	; 0x72c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_Init>:


#include "DIO.h"

void DIO_Init (const DIO_ConfigType *Config_Ptr)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	00 d0       	rcall	.+0      	; 0x88 <DIO_Init+0x6>
  88:	00 d0       	rcall	.+0      	; 0x8a <DIO_Init+0x8>
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
  8e:	9a 83       	std	Y+2, r25	; 0x02
  90:	89 83       	std	Y+1, r24	; 0x01
	switch(Config_Ptr->port)
  92:	e9 81       	ldd	r30, Y+1	; 0x01
  94:	fa 81       	ldd	r31, Y+2	; 0x02
  96:	80 81       	ld	r24, Z
  98:	28 2f       	mov	r18, r24
  9a:	30 e0       	ldi	r19, 0x00	; 0
  9c:	3c 83       	std	Y+4, r19	; 0x04
  9e:	2b 83       	std	Y+3, r18	; 0x03
  a0:	6b 81       	ldd	r22, Y+3	; 0x03
  a2:	7c 81       	ldd	r23, Y+4	; 0x04
  a4:	61 30       	cpi	r22, 0x01	; 1
  a6:	71 05       	cpc	r23, r1
  a8:	09 f4       	brne	.+2      	; 0xac <DIO_Init+0x2a>
  aa:	3f c0       	rjmp	.+126    	; 0x12a <DIO_Init+0xa8>
  ac:	8b 81       	ldd	r24, Y+3	; 0x03
  ae:	9c 81       	ldd	r25, Y+4	; 0x04
  b0:	82 30       	cpi	r24, 0x02	; 2
  b2:	91 05       	cpc	r25, r1
  b4:	34 f4       	brge	.+12     	; 0xc2 <DIO_Init+0x40>
  b6:	2b 81       	ldd	r18, Y+3	; 0x03
  b8:	3c 81       	ldd	r19, Y+4	; 0x04
  ba:	21 15       	cp	r18, r1
  bc:	31 05       	cpc	r19, r1
  be:	71 f0       	breq	.+28     	; 0xdc <DIO_Init+0x5a>
  c0:	a8 c0       	rjmp	.+336    	; 0x212 <DIO_Init+0x190>
  c2:	6b 81       	ldd	r22, Y+3	; 0x03
  c4:	7c 81       	ldd	r23, Y+4	; 0x04
  c6:	62 30       	cpi	r22, 0x02	; 2
  c8:	71 05       	cpc	r23, r1
  ca:	09 f4       	brne	.+2      	; 0xce <DIO_Init+0x4c>
  cc:	55 c0       	rjmp	.+170    	; 0x178 <DIO_Init+0xf6>
  ce:	8b 81       	ldd	r24, Y+3	; 0x03
  d0:	9c 81       	ldd	r25, Y+4	; 0x04
  d2:	83 30       	cpi	r24, 0x03	; 3
  d4:	91 05       	cpc	r25, r1
  d6:	09 f4       	brne	.+2      	; 0xda <DIO_Init+0x58>
  d8:	76 c0       	rjmp	.+236    	; 0x1c6 <DIO_Init+0x144>
  da:	9b c0       	rjmp	.+310    	; 0x212 <DIO_Init+0x190>
	{
	case PORT_A:
		PORTA_DIR = (PORTA_DIR & (1<<Config_Ptr->pin_number)) | (Config_Ptr->dir<<Config_Ptr->pin_number);
  dc:	aa e3       	ldi	r26, 0x3A	; 58
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	ea e3       	ldi	r30, 0x3A	; 58
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	48 2f       	mov	r20, r24
  e8:	e9 81       	ldd	r30, Y+1	; 0x01
  ea:	fa 81       	ldd	r31, Y+2	; 0x02
  ec:	81 81       	ldd	r24, Z+1	; 0x01
  ee:	28 2f       	mov	r18, r24
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	02 c0       	rjmp	.+4      	; 0xfc <DIO_Init+0x7a>
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	2a 95       	dec	r18
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <DIO_Init+0x76>
 100:	48 23       	and	r20, r24
 102:	e9 81       	ldd	r30, Y+1	; 0x01
 104:	fa 81       	ldd	r31, Y+2	; 0x02
 106:	82 81       	ldd	r24, Z+2	; 0x02
 108:	28 2f       	mov	r18, r24
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	e9 81       	ldd	r30, Y+1	; 0x01
 10e:	fa 81       	ldd	r31, Y+2	; 0x02
 110:	81 81       	ldd	r24, Z+1	; 0x01
 112:	88 2f       	mov	r24, r24
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	b9 01       	movw	r22, r18
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_Init+0x9c>
 11a:	66 0f       	add	r22, r22
 11c:	77 1f       	adc	r23, r23
 11e:	8a 95       	dec	r24
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_Init+0x98>
 122:	cb 01       	movw	r24, r22
 124:	84 2b       	or	r24, r20
 126:	8c 93       	st	X, r24
 128:	74 c0       	rjmp	.+232    	; 0x212 <DIO_Init+0x190>
		break;
	case PORT_B:
		PORTB_DIR = (PORTB_DIR & (1<<Config_Ptr->pin_number)) | (Config_Ptr->dir<<Config_Ptr->pin_number);
 12a:	a7 e3       	ldi	r26, 0x37	; 55
 12c:	b0 e0       	ldi	r27, 0x00	; 0
 12e:	e7 e3       	ldi	r30, 0x37	; 55
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	48 2f       	mov	r20, r24
 136:	e9 81       	ldd	r30, Y+1	; 0x01
 138:	fa 81       	ldd	r31, Y+2	; 0x02
 13a:	81 81       	ldd	r24, Z+1	; 0x01
 13c:	28 2f       	mov	r18, r24
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_Init+0xc8>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	2a 95       	dec	r18
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_Init+0xc4>
 14e:	48 23       	and	r20, r24
 150:	e9 81       	ldd	r30, Y+1	; 0x01
 152:	fa 81       	ldd	r31, Y+2	; 0x02
 154:	82 81       	ldd	r24, Z+2	; 0x02
 156:	28 2f       	mov	r18, r24
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	e9 81       	ldd	r30, Y+1	; 0x01
 15c:	fa 81       	ldd	r31, Y+2	; 0x02
 15e:	81 81       	ldd	r24, Z+1	; 0x01
 160:	88 2f       	mov	r24, r24
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	b9 01       	movw	r22, r18
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_Init+0xea>
 168:	66 0f       	add	r22, r22
 16a:	77 1f       	adc	r23, r23
 16c:	8a 95       	dec	r24
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_Init+0xe6>
 170:	cb 01       	movw	r24, r22
 172:	84 2b       	or	r24, r20
 174:	8c 93       	st	X, r24
 176:	4d c0       	rjmp	.+154    	; 0x212 <DIO_Init+0x190>
		break;
	case PORT_C:
		PORTC_DIR = (PORTC_DIR & (1<<Config_Ptr->pin_number)) | (Config_Ptr->dir<<Config_Ptr->pin_number);
 178:	a4 e3       	ldi	r26, 0x34	; 52
 17a:	b0 e0       	ldi	r27, 0x00	; 0
 17c:	e4 e3       	ldi	r30, 0x34	; 52
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	80 81       	ld	r24, Z
 182:	48 2f       	mov	r20, r24
 184:	e9 81       	ldd	r30, Y+1	; 0x01
 186:	fa 81       	ldd	r31, Y+2	; 0x02
 188:	81 81       	ldd	r24, Z+1	; 0x01
 18a:	28 2f       	mov	r18, r24
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_Init+0x116>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	2a 95       	dec	r18
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_Init+0x112>
 19c:	48 23       	and	r20, r24
 19e:	e9 81       	ldd	r30, Y+1	; 0x01
 1a0:	fa 81       	ldd	r31, Y+2	; 0x02
 1a2:	82 81       	ldd	r24, Z+2	; 0x02
 1a4:	28 2f       	mov	r18, r24
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	e9 81       	ldd	r30, Y+1	; 0x01
 1aa:	fa 81       	ldd	r31, Y+2	; 0x02
 1ac:	81 81       	ldd	r24, Z+1	; 0x01
 1ae:	88 2f       	mov	r24, r24
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	b9 01       	movw	r22, r18
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_Init+0x138>
 1b6:	66 0f       	add	r22, r22
 1b8:	77 1f       	adc	r23, r23
 1ba:	8a 95       	dec	r24
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_Init+0x134>
 1be:	cb 01       	movw	r24, r22
 1c0:	84 2b       	or	r24, r20
 1c2:	8c 93       	st	X, r24
 1c4:	26 c0       	rjmp	.+76     	; 0x212 <DIO_Init+0x190>
		break;
	case PORT_D:
		PORTD_DIR = (PORTD_DIR & (1<<Config_Ptr->pin_number)) | (Config_Ptr->dir<<Config_Ptr->pin_number);
 1c6:	a1 e3       	ldi	r26, 0x31	; 49
 1c8:	b0 e0       	ldi	r27, 0x00	; 0
 1ca:	e1 e3       	ldi	r30, 0x31	; 49
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	48 2f       	mov	r20, r24
 1d2:	e9 81       	ldd	r30, Y+1	; 0x01
 1d4:	fa 81       	ldd	r31, Y+2	; 0x02
 1d6:	81 81       	ldd	r24, Z+1	; 0x01
 1d8:	28 2f       	mov	r18, r24
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_Init+0x164>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	2a 95       	dec	r18
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_Init+0x160>
 1ea:	48 23       	and	r20, r24
 1ec:	e9 81       	ldd	r30, Y+1	; 0x01
 1ee:	fa 81       	ldd	r31, Y+2	; 0x02
 1f0:	82 81       	ldd	r24, Z+2	; 0x02
 1f2:	28 2f       	mov	r18, r24
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	e9 81       	ldd	r30, Y+1	; 0x01
 1f8:	fa 81       	ldd	r31, Y+2	; 0x02
 1fa:	81 81       	ldd	r24, Z+1	; 0x01
 1fc:	88 2f       	mov	r24, r24
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	b9 01       	movw	r22, r18
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_Init+0x186>
 204:	66 0f       	add	r22, r22
 206:	77 1f       	adc	r23, r23
 208:	8a 95       	dec	r24
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_Init+0x182>
 20c:	cb 01       	movw	r24, r22
 20e:	84 2b       	or	r24, r20
 210:	8c 93       	st	X, r24
		break;
	}
}
 212:	0f 90       	pop	r0
 214:	0f 90       	pop	r0
 216:	0f 90       	pop	r0
 218:	0f 90       	pop	r0
 21a:	cf 91       	pop	r28
 21c:	df 91       	pop	r29
 21e:	08 95       	ret

00000220 <DIO_Set>:

void DIO_Set ( Port port_number, uint8_t pin_number)
{
 220:	df 93       	push	r29
 222:	cf 93       	push	r28
 224:	00 d0       	rcall	.+0      	; 0x226 <DIO_Set+0x6>
 226:	00 d0       	rcall	.+0      	; 0x228 <DIO_Set+0x8>
 228:	cd b7       	in	r28, 0x3d	; 61
 22a:	de b7       	in	r29, 0x3e	; 62
 22c:	89 83       	std	Y+1, r24	; 0x01
 22e:	6a 83       	std	Y+2, r22	; 0x02
	switch(port_number)
 230:	89 81       	ldd	r24, Y+1	; 0x01
 232:	28 2f       	mov	r18, r24
 234:	30 e0       	ldi	r19, 0x00	; 0
 236:	3c 83       	std	Y+4, r19	; 0x04
 238:	2b 83       	std	Y+3, r18	; 0x03
 23a:	8b 81       	ldd	r24, Y+3	; 0x03
 23c:	9c 81       	ldd	r25, Y+4	; 0x04
 23e:	81 30       	cpi	r24, 0x01	; 1
 240:	91 05       	cpc	r25, r1
 242:	49 f1       	breq	.+82     	; 0x296 <DIO_Set+0x76>
 244:	2b 81       	ldd	r18, Y+3	; 0x03
 246:	3c 81       	ldd	r19, Y+4	; 0x04
 248:	22 30       	cpi	r18, 0x02	; 2
 24a:	31 05       	cpc	r19, r1
 24c:	2c f4       	brge	.+10     	; 0x258 <DIO_Set+0x38>
 24e:	8b 81       	ldd	r24, Y+3	; 0x03
 250:	9c 81       	ldd	r25, Y+4	; 0x04
 252:	00 97       	sbiw	r24, 0x00	; 0
 254:	61 f0       	breq	.+24     	; 0x26e <DIO_Set+0x4e>
 256:	5a c0       	rjmp	.+180    	; 0x30c <DIO_Set+0xec>
 258:	2b 81       	ldd	r18, Y+3	; 0x03
 25a:	3c 81       	ldd	r19, Y+4	; 0x04
 25c:	22 30       	cpi	r18, 0x02	; 2
 25e:	31 05       	cpc	r19, r1
 260:	71 f1       	breq	.+92     	; 0x2be <DIO_Set+0x9e>
 262:	8b 81       	ldd	r24, Y+3	; 0x03
 264:	9c 81       	ldd	r25, Y+4	; 0x04
 266:	83 30       	cpi	r24, 0x03	; 3
 268:	91 05       	cpc	r25, r1
 26a:	e9 f1       	breq	.+122    	; 0x2e6 <DIO_Set+0xc6>
 26c:	4f c0       	rjmp	.+158    	; 0x30c <DIO_Set+0xec>
	{
	case PORT_A:
		PORTA_OUT |= (1<<pin_number);
 26e:	ab e3       	ldi	r26, 0x3B	; 59
 270:	b0 e0       	ldi	r27, 0x00	; 0
 272:	eb e3       	ldi	r30, 0x3B	; 59
 274:	f0 e0       	ldi	r31, 0x00	; 0
 276:	80 81       	ld	r24, Z
 278:	48 2f       	mov	r20, r24
 27a:	8a 81       	ldd	r24, Y+2	; 0x02
 27c:	28 2f       	mov	r18, r24
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	02 2e       	mov	r0, r18
 286:	02 c0       	rjmp	.+4      	; 0x28c <DIO_Set+0x6c>
 288:	88 0f       	add	r24, r24
 28a:	99 1f       	adc	r25, r25
 28c:	0a 94       	dec	r0
 28e:	e2 f7       	brpl	.-8      	; 0x288 <DIO_Set+0x68>
 290:	84 2b       	or	r24, r20
 292:	8c 93       	st	X, r24
 294:	3b c0       	rjmp	.+118    	; 0x30c <DIO_Set+0xec>
		break;
	case PORT_B:
		PORTB_OUT |= (1<<pin_number);
 296:	a8 e3       	ldi	r26, 0x38	; 56
 298:	b0 e0       	ldi	r27, 0x00	; 0
 29a:	e8 e3       	ldi	r30, 0x38	; 56
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	80 81       	ld	r24, Z
 2a0:	48 2f       	mov	r20, r24
 2a2:	8a 81       	ldd	r24, Y+2	; 0x02
 2a4:	28 2f       	mov	r18, r24
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 2e       	mov	r0, r18
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <DIO_Set+0x94>
 2b0:	88 0f       	add	r24, r24
 2b2:	99 1f       	adc	r25, r25
 2b4:	0a 94       	dec	r0
 2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <DIO_Set+0x90>
 2b8:	84 2b       	or	r24, r20
 2ba:	8c 93       	st	X, r24
 2bc:	27 c0       	rjmp	.+78     	; 0x30c <DIO_Set+0xec>
		break;
	case PORT_C:
		PORTC_OUT |= (1<<pin_number);
 2be:	a5 e3       	ldi	r26, 0x35	; 53
 2c0:	b0 e0       	ldi	r27, 0x00	; 0
 2c2:	e5 e3       	ldi	r30, 0x35	; 53
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	48 2f       	mov	r20, r24
 2ca:	8a 81       	ldd	r24, Y+2	; 0x02
 2cc:	28 2f       	mov	r18, r24
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	02 2e       	mov	r0, r18
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <DIO_Set+0xbc>
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	0a 94       	dec	r0
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <DIO_Set+0xb8>
 2e0:	84 2b       	or	r24, r20
 2e2:	8c 93       	st	X, r24
 2e4:	13 c0       	rjmp	.+38     	; 0x30c <DIO_Set+0xec>
		break;
	case PORT_D:
		PORTD_OUT |= (1<<pin_number);
 2e6:	a2 e3       	ldi	r26, 0x32	; 50
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	e2 e3       	ldi	r30, 0x32	; 50
 2ec:	f0 e0       	ldi	r31, 0x00	; 0
 2ee:	80 81       	ld	r24, Z
 2f0:	48 2f       	mov	r20, r24
 2f2:	8a 81       	ldd	r24, Y+2	; 0x02
 2f4:	28 2f       	mov	r18, r24
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	02 2e       	mov	r0, r18
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <DIO_Set+0xe4>
 300:	88 0f       	add	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	0a 94       	dec	r0
 306:	e2 f7       	brpl	.-8      	; 0x300 <DIO_Set+0xe0>
 308:	84 2b       	or	r24, r20
 30a:	8c 93       	st	X, r24
		break;
	}
}
 30c:	0f 90       	pop	r0
 30e:	0f 90       	pop	r0
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
 314:	cf 91       	pop	r28
 316:	df 91       	pop	r29
 318:	08 95       	ret

0000031a <DIO_Clear>:

void DIO_Clear ( Port port_number, uint8_t pin_number)
{
 31a:	df 93       	push	r29
 31c:	cf 93       	push	r28
 31e:	00 d0       	rcall	.+0      	; 0x320 <DIO_Clear+0x6>
 320:	00 d0       	rcall	.+0      	; 0x322 <DIO_Clear+0x8>
 322:	cd b7       	in	r28, 0x3d	; 61
 324:	de b7       	in	r29, 0x3e	; 62
 326:	89 83       	std	Y+1, r24	; 0x01
 328:	6a 83       	std	Y+2, r22	; 0x02
	switch(port_number)
 32a:	89 81       	ldd	r24, Y+1	; 0x01
 32c:	28 2f       	mov	r18, r24
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	3c 83       	std	Y+4, r19	; 0x04
 332:	2b 83       	std	Y+3, r18	; 0x03
 334:	8b 81       	ldd	r24, Y+3	; 0x03
 336:	9c 81       	ldd	r25, Y+4	; 0x04
 338:	81 30       	cpi	r24, 0x01	; 1
 33a:	91 05       	cpc	r25, r1
 33c:	59 f1       	breq	.+86     	; 0x394 <DIO_Clear+0x7a>
 33e:	2b 81       	ldd	r18, Y+3	; 0x03
 340:	3c 81       	ldd	r19, Y+4	; 0x04
 342:	22 30       	cpi	r18, 0x02	; 2
 344:	31 05       	cpc	r19, r1
 346:	2c f4       	brge	.+10     	; 0x352 <DIO_Clear+0x38>
 348:	8b 81       	ldd	r24, Y+3	; 0x03
 34a:	9c 81       	ldd	r25, Y+4	; 0x04
 34c:	00 97       	sbiw	r24, 0x00	; 0
 34e:	69 f0       	breq	.+26     	; 0x36a <DIO_Clear+0x50>
 350:	5f c0       	rjmp	.+190    	; 0x410 <DIO_Clear+0xf6>
 352:	2b 81       	ldd	r18, Y+3	; 0x03
 354:	3c 81       	ldd	r19, Y+4	; 0x04
 356:	22 30       	cpi	r18, 0x02	; 2
 358:	31 05       	cpc	r19, r1
 35a:	89 f1       	breq	.+98     	; 0x3be <DIO_Clear+0xa4>
 35c:	8b 81       	ldd	r24, Y+3	; 0x03
 35e:	9c 81       	ldd	r25, Y+4	; 0x04
 360:	83 30       	cpi	r24, 0x03	; 3
 362:	91 05       	cpc	r25, r1
 364:	09 f4       	brne	.+2      	; 0x368 <DIO_Clear+0x4e>
 366:	40 c0       	rjmp	.+128    	; 0x3e8 <DIO_Clear+0xce>
 368:	53 c0       	rjmp	.+166    	; 0x410 <DIO_Clear+0xf6>
	{
	case PORT_A:
		PORTA_OUT &= ~(1<<pin_number);
 36a:	ab e3       	ldi	r26, 0x3B	; 59
 36c:	b0 e0       	ldi	r27, 0x00	; 0
 36e:	eb e3       	ldi	r30, 0x3B	; 59
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	80 81       	ld	r24, Z
 374:	48 2f       	mov	r20, r24
 376:	8a 81       	ldd	r24, Y+2	; 0x02
 378:	28 2f       	mov	r18, r24
 37a:	30 e0       	ldi	r19, 0x00	; 0
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	02 2e       	mov	r0, r18
 382:	02 c0       	rjmp	.+4      	; 0x388 <DIO_Clear+0x6e>
 384:	88 0f       	add	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	0a 94       	dec	r0
 38a:	e2 f7       	brpl	.-8      	; 0x384 <DIO_Clear+0x6a>
 38c:	80 95       	com	r24
 38e:	84 23       	and	r24, r20
 390:	8c 93       	st	X, r24
 392:	3e c0       	rjmp	.+124    	; 0x410 <DIO_Clear+0xf6>
		break;
	case PORT_B:
		PORTB_OUT &= ~(1<<pin_number);
 394:	a8 e3       	ldi	r26, 0x38	; 56
 396:	b0 e0       	ldi	r27, 0x00	; 0
 398:	e8 e3       	ldi	r30, 0x38	; 56
 39a:	f0 e0       	ldi	r31, 0x00	; 0
 39c:	80 81       	ld	r24, Z
 39e:	48 2f       	mov	r20, r24
 3a0:	8a 81       	ldd	r24, Y+2	; 0x02
 3a2:	28 2f       	mov	r18, r24
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	02 2e       	mov	r0, r18
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <DIO_Clear+0x98>
 3ae:	88 0f       	add	r24, r24
 3b0:	99 1f       	adc	r25, r25
 3b2:	0a 94       	dec	r0
 3b4:	e2 f7       	brpl	.-8      	; 0x3ae <DIO_Clear+0x94>
 3b6:	80 95       	com	r24
 3b8:	84 23       	and	r24, r20
 3ba:	8c 93       	st	X, r24
 3bc:	29 c0       	rjmp	.+82     	; 0x410 <DIO_Clear+0xf6>
		break;
	case PORT_C:
		PORTC_OUT &= ~(1<<pin_number);
 3be:	a5 e3       	ldi	r26, 0x35	; 53
 3c0:	b0 e0       	ldi	r27, 0x00	; 0
 3c2:	e5 e3       	ldi	r30, 0x35	; 53
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	80 81       	ld	r24, Z
 3c8:	48 2f       	mov	r20, r24
 3ca:	8a 81       	ldd	r24, Y+2	; 0x02
 3cc:	28 2f       	mov	r18, r24
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	02 2e       	mov	r0, r18
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <DIO_Clear+0xc2>
 3d8:	88 0f       	add	r24, r24
 3da:	99 1f       	adc	r25, r25
 3dc:	0a 94       	dec	r0
 3de:	e2 f7       	brpl	.-8      	; 0x3d8 <DIO_Clear+0xbe>
 3e0:	80 95       	com	r24
 3e2:	84 23       	and	r24, r20
 3e4:	8c 93       	st	X, r24
 3e6:	14 c0       	rjmp	.+40     	; 0x410 <DIO_Clear+0xf6>
		break;
	case PORT_D:
		PORTD_OUT &= ~(1<<pin_number);
 3e8:	a2 e3       	ldi	r26, 0x32	; 50
 3ea:	b0 e0       	ldi	r27, 0x00	; 0
 3ec:	e2 e3       	ldi	r30, 0x32	; 50
 3ee:	f0 e0       	ldi	r31, 0x00	; 0
 3f0:	80 81       	ld	r24, Z
 3f2:	48 2f       	mov	r20, r24
 3f4:	8a 81       	ldd	r24, Y+2	; 0x02
 3f6:	28 2f       	mov	r18, r24
 3f8:	30 e0       	ldi	r19, 0x00	; 0
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	02 2e       	mov	r0, r18
 400:	02 c0       	rjmp	.+4      	; 0x406 <DIO_Clear+0xec>
 402:	88 0f       	add	r24, r24
 404:	99 1f       	adc	r25, r25
 406:	0a 94       	dec	r0
 408:	e2 f7       	brpl	.-8      	; 0x402 <DIO_Clear+0xe8>
 40a:	80 95       	com	r24
 40c:	84 23       	and	r24, r20
 40e:	8c 93       	st	X, r24
		break;
	}
}
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	cf 91       	pop	r28
 41a:	df 91       	pop	r29
 41c:	08 95       	ret

0000041e <DIO_Toggle>:

void DIO_Toggle ( Port port_number, uint8_t pin_number)
{
 41e:	df 93       	push	r29
 420:	cf 93       	push	r28
 422:	00 d0       	rcall	.+0      	; 0x424 <DIO_Toggle+0x6>
 424:	00 d0       	rcall	.+0      	; 0x426 <DIO_Toggle+0x8>
 426:	cd b7       	in	r28, 0x3d	; 61
 428:	de b7       	in	r29, 0x3e	; 62
 42a:	89 83       	std	Y+1, r24	; 0x01
 42c:	6a 83       	std	Y+2, r22	; 0x02
	switch(port_number)
 42e:	89 81       	ldd	r24, Y+1	; 0x01
 430:	28 2f       	mov	r18, r24
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	3c 83       	std	Y+4, r19	; 0x04
 436:	2b 83       	std	Y+3, r18	; 0x03
 438:	8b 81       	ldd	r24, Y+3	; 0x03
 43a:	9c 81       	ldd	r25, Y+4	; 0x04
 43c:	81 30       	cpi	r24, 0x01	; 1
 43e:	91 05       	cpc	r25, r1
 440:	49 f1       	breq	.+82     	; 0x494 <__stack+0x35>
 442:	2b 81       	ldd	r18, Y+3	; 0x03
 444:	3c 81       	ldd	r19, Y+4	; 0x04
 446:	22 30       	cpi	r18, 0x02	; 2
 448:	31 05       	cpc	r19, r1
 44a:	2c f4       	brge	.+10     	; 0x456 <DIO_Toggle+0x38>
 44c:	8b 81       	ldd	r24, Y+3	; 0x03
 44e:	9c 81       	ldd	r25, Y+4	; 0x04
 450:	00 97       	sbiw	r24, 0x00	; 0
 452:	61 f0       	breq	.+24     	; 0x46c <__stack+0xd>
 454:	5a c0       	rjmp	.+180    	; 0x50a <__stack+0xab>
 456:	2b 81       	ldd	r18, Y+3	; 0x03
 458:	3c 81       	ldd	r19, Y+4	; 0x04
 45a:	22 30       	cpi	r18, 0x02	; 2
 45c:	31 05       	cpc	r19, r1
 45e:	71 f1       	breq	.+92     	; 0x4bc <__stack+0x5d>
 460:	8b 81       	ldd	r24, Y+3	; 0x03
 462:	9c 81       	ldd	r25, Y+4	; 0x04
 464:	83 30       	cpi	r24, 0x03	; 3
 466:	91 05       	cpc	r25, r1
 468:	e9 f1       	breq	.+122    	; 0x4e4 <__stack+0x85>
 46a:	4f c0       	rjmp	.+158    	; 0x50a <__stack+0xab>
	{
	case PORT_A:
		PORTA_OUT ^= (1<<pin_number);
 46c:	ab e3       	ldi	r26, 0x3B	; 59
 46e:	b0 e0       	ldi	r27, 0x00	; 0
 470:	eb e3       	ldi	r30, 0x3B	; 59
 472:	f0 e0       	ldi	r31, 0x00	; 0
 474:	80 81       	ld	r24, Z
 476:	48 2f       	mov	r20, r24
 478:	8a 81       	ldd	r24, Y+2	; 0x02
 47a:	28 2f       	mov	r18, r24
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	02 2e       	mov	r0, r18
 484:	02 c0       	rjmp	.+4      	; 0x48a <__stack+0x2b>
 486:	88 0f       	add	r24, r24
 488:	99 1f       	adc	r25, r25
 48a:	0a 94       	dec	r0
 48c:	e2 f7       	brpl	.-8      	; 0x486 <__stack+0x27>
 48e:	84 27       	eor	r24, r20
 490:	8c 93       	st	X, r24
 492:	3b c0       	rjmp	.+118    	; 0x50a <__stack+0xab>
		break;
	case PORT_B:
		PORTB_OUT ^= (1<<pin_number);
 494:	a8 e3       	ldi	r26, 0x38	; 56
 496:	b0 e0       	ldi	r27, 0x00	; 0
 498:	e8 e3       	ldi	r30, 0x38	; 56
 49a:	f0 e0       	ldi	r31, 0x00	; 0
 49c:	80 81       	ld	r24, Z
 49e:	48 2f       	mov	r20, r24
 4a0:	8a 81       	ldd	r24, Y+2	; 0x02
 4a2:	28 2f       	mov	r18, r24
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	02 2e       	mov	r0, r18
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__stack+0x53>
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	0a 94       	dec	r0
 4b4:	e2 f7       	brpl	.-8      	; 0x4ae <__stack+0x4f>
 4b6:	84 27       	eor	r24, r20
 4b8:	8c 93       	st	X, r24
 4ba:	27 c0       	rjmp	.+78     	; 0x50a <__stack+0xab>
		break;
	case PORT_C:
		PORTC_OUT ^= (1<<pin_number);
 4bc:	a5 e3       	ldi	r26, 0x35	; 53
 4be:	b0 e0       	ldi	r27, 0x00	; 0
 4c0:	e5 e3       	ldi	r30, 0x35	; 53
 4c2:	f0 e0       	ldi	r31, 0x00	; 0
 4c4:	80 81       	ld	r24, Z
 4c6:	48 2f       	mov	r20, r24
 4c8:	8a 81       	ldd	r24, Y+2	; 0x02
 4ca:	28 2f       	mov	r18, r24
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	02 2e       	mov	r0, r18
 4d4:	02 c0       	rjmp	.+4      	; 0x4da <__stack+0x7b>
 4d6:	88 0f       	add	r24, r24
 4d8:	99 1f       	adc	r25, r25
 4da:	0a 94       	dec	r0
 4dc:	e2 f7       	brpl	.-8      	; 0x4d6 <__stack+0x77>
 4de:	84 27       	eor	r24, r20
 4e0:	8c 93       	st	X, r24
 4e2:	13 c0       	rjmp	.+38     	; 0x50a <__stack+0xab>
		break;
	case PORT_D:
		PORTD_OUT ^= (1<<pin_number);
 4e4:	a2 e3       	ldi	r26, 0x32	; 50
 4e6:	b0 e0       	ldi	r27, 0x00	; 0
 4e8:	e2 e3       	ldi	r30, 0x32	; 50
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	80 81       	ld	r24, Z
 4ee:	48 2f       	mov	r20, r24
 4f0:	8a 81       	ldd	r24, Y+2	; 0x02
 4f2:	28 2f       	mov	r18, r24
 4f4:	30 e0       	ldi	r19, 0x00	; 0
 4f6:	81 e0       	ldi	r24, 0x01	; 1
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	02 2e       	mov	r0, r18
 4fc:	02 c0       	rjmp	.+4      	; 0x502 <__stack+0xa3>
 4fe:	88 0f       	add	r24, r24
 500:	99 1f       	adc	r25, r25
 502:	0a 94       	dec	r0
 504:	e2 f7       	brpl	.-8      	; 0x4fe <__stack+0x9f>
 506:	84 27       	eor	r24, r20
 508:	8c 93       	st	X, r24
		break;
	}
}
 50a:	0f 90       	pop	r0
 50c:	0f 90       	pop	r0
 50e:	0f 90       	pop	r0
 510:	0f 90       	pop	r0
 512:	cf 91       	pop	r28
 514:	df 91       	pop	r29
 516:	08 95       	ret

00000518 <DIO_Read>:

uint8_t DIO_Read ( Port port_number, uint8_t pin_number)
{
 518:	df 93       	push	r29
 51a:	cf 93       	push	r28
 51c:	00 d0       	rcall	.+0      	; 0x51e <DIO_Read+0x6>
 51e:	00 d0       	rcall	.+0      	; 0x520 <DIO_Read+0x8>
 520:	0f 92       	push	r0
 522:	cd b7       	in	r28, 0x3d	; 61
 524:	de b7       	in	r29, 0x3e	; 62
 526:	89 83       	std	Y+1, r24	; 0x01
 528:	6a 83       	std	Y+2, r22	; 0x02
	switch(port_number)
 52a:	89 81       	ldd	r24, Y+1	; 0x01
 52c:	28 2f       	mov	r18, r24
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	3d 83       	std	Y+5, r19	; 0x05
 532:	2c 83       	std	Y+4, r18	; 0x04
 534:	8c 81       	ldd	r24, Y+4	; 0x04
 536:	9d 81       	ldd	r25, Y+5	; 0x05
 538:	81 30       	cpi	r24, 0x01	; 1
 53a:	91 05       	cpc	r25, r1
 53c:	39 f1       	breq	.+78     	; 0x58c <DIO_Read+0x74>
 53e:	2c 81       	ldd	r18, Y+4	; 0x04
 540:	3d 81       	ldd	r19, Y+5	; 0x05
 542:	22 30       	cpi	r18, 0x02	; 2
 544:	31 05       	cpc	r19, r1
 546:	2c f4       	brge	.+10     	; 0x552 <DIO_Read+0x3a>
 548:	8c 81       	ldd	r24, Y+4	; 0x04
 54a:	9d 81       	ldd	r25, Y+5	; 0x05
 54c:	00 97       	sbiw	r24, 0x00	; 0
 54e:	61 f0       	breq	.+24     	; 0x568 <DIO_Read+0x50>
 550:	53 c0       	rjmp	.+166    	; 0x5f8 <DIO_Read+0xe0>
 552:	2c 81       	ldd	r18, Y+4	; 0x04
 554:	3d 81       	ldd	r19, Y+5	; 0x05
 556:	22 30       	cpi	r18, 0x02	; 2
 558:	31 05       	cpc	r19, r1
 55a:	51 f1       	breq	.+84     	; 0x5b0 <DIO_Read+0x98>
 55c:	8c 81       	ldd	r24, Y+4	; 0x04
 55e:	9d 81       	ldd	r25, Y+5	; 0x05
 560:	83 30       	cpi	r24, 0x03	; 3
 562:	91 05       	cpc	r25, r1
 564:	b9 f1       	breq	.+110    	; 0x5d4 <DIO_Read+0xbc>
 566:	48 c0       	rjmp	.+144    	; 0x5f8 <DIO_Read+0xe0>
	{
	case PORT_A:
		return PORTA_IN & (1<<pin_number);
 568:	e9 e3       	ldi	r30, 0x39	; 57
 56a:	f0 e0       	ldi	r31, 0x00	; 0
 56c:	80 81       	ld	r24, Z
 56e:	48 2f       	mov	r20, r24
 570:	8a 81       	ldd	r24, Y+2	; 0x02
 572:	28 2f       	mov	r18, r24
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	02 2e       	mov	r0, r18
 57c:	02 c0       	rjmp	.+4      	; 0x582 <DIO_Read+0x6a>
 57e:	88 0f       	add	r24, r24
 580:	99 1f       	adc	r25, r25
 582:	0a 94       	dec	r0
 584:	e2 f7       	brpl	.-8      	; 0x57e <DIO_Read+0x66>
 586:	84 23       	and	r24, r20
 588:	8b 83       	std	Y+3, r24	; 0x03
 58a:	38 c0       	rjmp	.+112    	; 0x5fc <DIO_Read+0xe4>
		break;
	case PORT_B:
		return PORTB_IN & (1<<pin_number);
 58c:	e6 e3       	ldi	r30, 0x36	; 54
 58e:	f0 e0       	ldi	r31, 0x00	; 0
 590:	80 81       	ld	r24, Z
 592:	48 2f       	mov	r20, r24
 594:	8a 81       	ldd	r24, Y+2	; 0x02
 596:	28 2f       	mov	r18, r24
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	02 2e       	mov	r0, r18
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <DIO_Read+0x8e>
 5a2:	88 0f       	add	r24, r24
 5a4:	99 1f       	adc	r25, r25
 5a6:	0a 94       	dec	r0
 5a8:	e2 f7       	brpl	.-8      	; 0x5a2 <DIO_Read+0x8a>
 5aa:	84 23       	and	r24, r20
 5ac:	8b 83       	std	Y+3, r24	; 0x03
 5ae:	26 c0       	rjmp	.+76     	; 0x5fc <DIO_Read+0xe4>
		break;
	case PORT_C:
		return PORTC_IN & (1<<pin_number);
 5b0:	e3 e3       	ldi	r30, 0x33	; 51
 5b2:	f0 e0       	ldi	r31, 0x00	; 0
 5b4:	80 81       	ld	r24, Z
 5b6:	48 2f       	mov	r20, r24
 5b8:	8a 81       	ldd	r24, Y+2	; 0x02
 5ba:	28 2f       	mov	r18, r24
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	02 2e       	mov	r0, r18
 5c4:	02 c0       	rjmp	.+4      	; 0x5ca <DIO_Read+0xb2>
 5c6:	88 0f       	add	r24, r24
 5c8:	99 1f       	adc	r25, r25
 5ca:	0a 94       	dec	r0
 5cc:	e2 f7       	brpl	.-8      	; 0x5c6 <DIO_Read+0xae>
 5ce:	84 23       	and	r24, r20
 5d0:	8b 83       	std	Y+3, r24	; 0x03
 5d2:	14 c0       	rjmp	.+40     	; 0x5fc <DIO_Read+0xe4>
		break;
	case PORT_D:
		return PORTD_IN & (1<<pin_number);
 5d4:	e0 e3       	ldi	r30, 0x30	; 48
 5d6:	f0 e0       	ldi	r31, 0x00	; 0
 5d8:	80 81       	ld	r24, Z
 5da:	48 2f       	mov	r20, r24
 5dc:	8a 81       	ldd	r24, Y+2	; 0x02
 5de:	28 2f       	mov	r18, r24
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	81 e0       	ldi	r24, 0x01	; 1
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	02 2e       	mov	r0, r18
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <DIO_Read+0xd6>
 5ea:	88 0f       	add	r24, r24
 5ec:	99 1f       	adc	r25, r25
 5ee:	0a 94       	dec	r0
 5f0:	e2 f7       	brpl	.-8      	; 0x5ea <DIO_Read+0xd2>
 5f2:	84 23       	and	r24, r20
 5f4:	8b 83       	std	Y+3, r24	; 0x03
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <DIO_Read+0xe4>
		break;
	default:
		return -1;
 5f8:	9f ef       	ldi	r25, 0xFF	; 255
 5fa:	9b 83       	std	Y+3, r25	; 0x03
 5fc:	8b 81       	ldd	r24, Y+3	; 0x03
	}
}
 5fe:	0f 90       	pop	r0
 600:	0f 90       	pop	r0
 602:	0f 90       	pop	r0
 604:	0f 90       	pop	r0
 606:	0f 90       	pop	r0
 608:	cf 91       	pop	r28
 60a:	df 91       	pop	r29
 60c:	08 95       	ret

0000060e <Led_On>:

#include "Led.h"
#include "../../MCAL/DIO/DIO.h"

void Led_On(Port port_number, uint8_t pin_number)
{
 60e:	df 93       	push	r29
 610:	cf 93       	push	r28
 612:	00 d0       	rcall	.+0      	; 0x614 <Led_On+0x6>
 614:	cd b7       	in	r28, 0x3d	; 61
 616:	de b7       	in	r29, 0x3e	; 62
 618:	89 83       	std	Y+1, r24	; 0x01
 61a:	6a 83       	std	Y+2, r22	; 0x02
	DIO_Set(port_number, pin_number);
 61c:	89 81       	ldd	r24, Y+1	; 0x01
 61e:	6a 81       	ldd	r22, Y+2	; 0x02
 620:	0e 94 10 01 	call	0x220	; 0x220 <DIO_Set>
}
 624:	0f 90       	pop	r0
 626:	0f 90       	pop	r0
 628:	cf 91       	pop	r28
 62a:	df 91       	pop	r29
 62c:	08 95       	ret

0000062e <Led_Off>:
void Led_Off(Port port_number, uint8_t pin_number)
{
 62e:	df 93       	push	r29
 630:	cf 93       	push	r28
 632:	00 d0       	rcall	.+0      	; 0x634 <Led_Off+0x6>
 634:	cd b7       	in	r28, 0x3d	; 61
 636:	de b7       	in	r29, 0x3e	; 62
 638:	89 83       	std	Y+1, r24	; 0x01
 63a:	6a 83       	std	Y+2, r22	; 0x02
	DIO_Clear(port_number, pin_number);
 63c:	89 81       	ldd	r24, Y+1	; 0x01
 63e:	6a 81       	ldd	r22, Y+2	; 0x02
 640:	0e 94 8d 01 	call	0x31a	; 0x31a <DIO_Clear>
}
 644:	0f 90       	pop	r0
 646:	0f 90       	pop	r0
 648:	cf 91       	pop	r28
 64a:	df 91       	pop	r29
 64c:	08 95       	ret

0000064e <Led_Toggle>:

void Led_Toggle(Port port_number, uint8_t pin_number)
{
 64e:	df 93       	push	r29
 650:	cf 93       	push	r28
 652:	00 d0       	rcall	.+0      	; 0x654 <Led_Toggle+0x6>
 654:	cd b7       	in	r28, 0x3d	; 61
 656:	de b7       	in	r29, 0x3e	; 62
 658:	89 83       	std	Y+1, r24	; 0x01
 65a:	6a 83       	std	Y+2, r22	; 0x02
	DIO_Toggle(port_number, pin_number);
 65c:	89 81       	ldd	r24, Y+1	; 0x01
 65e:	6a 81       	ldd	r22, Y+2	; 0x02
 660:	0e 94 0f 02 	call	0x41e	; 0x41e <DIO_Toggle>
}
 664:	0f 90       	pop	r0
 666:	0f 90       	pop	r0
 668:	cf 91       	pop	r28
 66a:	df 91       	pop	r29
 66c:	08 95       	ret

0000066e <Button_Read>:

#include "Button.h"
#include "../../MCAL/DIO/DIO.h"

uint8_t Button_Read (Port port_number, uint8_t pin_number)
{
 66e:	df 93       	push	r29
 670:	cf 93       	push	r28
 672:	00 d0       	rcall	.+0      	; 0x674 <Button_Read+0x6>
 674:	cd b7       	in	r28, 0x3d	; 61
 676:	de b7       	in	r29, 0x3e	; 62
 678:	89 83       	std	Y+1, r24	; 0x01
 67a:	6a 83       	std	Y+2, r22	; 0x02
	return DIO_Read(port_number, pin_number);
 67c:	89 81       	ldd	r24, Y+1	; 0x01
 67e:	6a 81       	ldd	r22, Y+2	; 0x02
 680:	0e 94 8c 02 	call	0x518	; 0x518 <DIO_Read>
}
 684:	0f 90       	pop	r0
 686:	0f 90       	pop	r0
 688:	cf 91       	pop	r28
 68a:	df 91       	pop	r29
 68c:	08 95       	ret

0000068e <main>:
 */
#include "ECUAL/Button/Button.h"
#include "MCAL/DIO/DIO.h"

int main()
{
 68e:	df 93       	push	r29
 690:	cf 93       	push	r28
 692:	cd b7       	in	r28, 0x3d	; 61
 694:	de b7       	in	r29, 0x3e	; 62
 696:	29 97       	sbiw	r28, 0x09	; 9
 698:	0f b6       	in	r0, 0x3f	; 63
 69a:	f8 94       	cli
 69c:	de bf       	out	0x3e, r29	; 62
 69e:	0f be       	out	0x3f, r0	; 63
 6a0:	cd bf       	out	0x3d, r28	; 61
	uint8_t flag = 0;
 6a2:	19 82       	std	Y+1, r1	; 0x01

	DIO_ConfigType config = {PORT_A, P0, OUTPUT};
 6a4:	ce 01       	movw	r24, r28
 6a6:	02 96       	adiw	r24, 0x02	; 2
 6a8:	9e 83       	std	Y+6, r25	; 0x06
 6aa:	8d 83       	std	Y+5, r24	; 0x05
 6ac:	e0 e6       	ldi	r30, 0x60	; 96
 6ae:	f0 e0       	ldi	r31, 0x00	; 0
 6b0:	f8 87       	std	Y+8, r31	; 0x08
 6b2:	ef 83       	std	Y+7, r30	; 0x07
 6b4:	f3 e0       	ldi	r31, 0x03	; 3
 6b6:	f9 87       	std	Y+9, r31	; 0x09
 6b8:	ef 81       	ldd	r30, Y+7	; 0x07
 6ba:	f8 85       	ldd	r31, Y+8	; 0x08
 6bc:	00 80       	ld	r0, Z
 6be:	8f 81       	ldd	r24, Y+7	; 0x07
 6c0:	98 85       	ldd	r25, Y+8	; 0x08
 6c2:	01 96       	adiw	r24, 0x01	; 1
 6c4:	98 87       	std	Y+8, r25	; 0x08
 6c6:	8f 83       	std	Y+7, r24	; 0x07
 6c8:	ed 81       	ldd	r30, Y+5	; 0x05
 6ca:	fe 81       	ldd	r31, Y+6	; 0x06
 6cc:	00 82       	st	Z, r0
 6ce:	8d 81       	ldd	r24, Y+5	; 0x05
 6d0:	9e 81       	ldd	r25, Y+6	; 0x06
 6d2:	01 96       	adiw	r24, 0x01	; 1
 6d4:	9e 83       	std	Y+6, r25	; 0x06
 6d6:	8d 83       	std	Y+5, r24	; 0x05
 6d8:	99 85       	ldd	r25, Y+9	; 0x09
 6da:	91 50       	subi	r25, 0x01	; 1
 6dc:	99 87       	std	Y+9, r25	; 0x09
 6de:	e9 85       	ldd	r30, Y+9	; 0x09
 6e0:	ee 23       	and	r30, r30
 6e2:	51 f7       	brne	.-44     	; 0x6b8 <main+0x2a>
	DIO_Init(&config);
 6e4:	ce 01       	movw	r24, r28
 6e6:	02 96       	adiw	r24, 0x02	; 2
 6e8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_Init>

	config.port = PORT_C;
 6ec:	82 e0       	ldi	r24, 0x02	; 2
 6ee:	8a 83       	std	Y+2, r24	; 0x02
	config.dir = INPUT;
 6f0:	1c 82       	std	Y+4, r1	; 0x04
	DIO_Init(&config);
 6f2:	ce 01       	movw	r24, r28
 6f4:	02 96       	adiw	r24, 0x02	; 2
 6f6:	0e 94 41 00 	call	0x82	; 0x82 <DIO_Init>

	DIO_Clear(PORT_A, P0);
 6fa:	80 e0       	ldi	r24, 0x00	; 0
 6fc:	60 e0       	ldi	r22, 0x00	; 0
 6fe:	0e 94 8d 01 	call	0x31a	; 0x31a <DIO_Clear>

	while(1)
	{
		if(Button_Read(PORT_C, P0) == 1)
 702:	82 e0       	ldi	r24, 0x02	; 2
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	60 e0       	ldi	r22, 0x00	; 0
 708:	70 e0       	ldi	r23, 0x00	; 0
 70a:	0e 94 37 03 	call	0x66e	; 0x66e <Button_Read>
 70e:	81 30       	cpi	r24, 0x01	; 1
 710:	91 05       	cpc	r25, r1
 712:	51 f4       	brne	.+20     	; 0x728 <main+0x9a>
				{

					if(flag == 0)
 714:	89 81       	ldd	r24, Y+1	; 0x01
 716:	88 23       	and	r24, r24
 718:	a1 f7       	brne	.-24     	; 0x702 <main+0x74>
					{
						DIO_Toggle(PORT_A, P0); // Toggle value of pin 0 in PORTA (LED Toggle)
 71a:	80 e0       	ldi	r24, 0x00	; 0
 71c:	60 e0       	ldi	r22, 0x00	; 0
 71e:	0e 94 0f 02 	call	0x41e	; 0x41e <DIO_Toggle>
						//set the button flag value to 1 to not enter here again until the button is released.
						flag = 1;
 722:	81 e0       	ldi	r24, 0x01	; 1
 724:	89 83       	std	Y+1, r24	; 0x01
 726:	ed cf       	rjmp	.-38     	; 0x702 <main+0x74>

				}
				else
				{
					// button is released reset the button flag to value 0 again.
					flag = 0;
 728:	19 82       	std	Y+1, r1	; 0x01
 72a:	eb cf       	rjmp	.-42     	; 0x702 <main+0x74>

0000072c <_exit>:
 72c:	f8 94       	cli

0000072e <__stop_program>:
 72e:	ff cf       	rjmp	.-2      	; 0x72e <__stop_program>
